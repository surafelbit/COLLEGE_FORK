"use client";
import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { useMemo, useState } from "react";
import { Card, CardContent } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Sheet, SheetContent, SheetHeader, SheetTitle } from "@/components/ui/sheet";
const studentsMock = Array.from({ length: 24 }).map((_, i) => ({
    id: 1000 + i,
    name: `Student ${i + 1}`,
    dept: ["Medicine", "Pharmacy", "Radiology", "Nursing", "Dentistry"][i % 5],
    semester: ["Sem 1", "Sem 2", "Sem 3", "Sem 4"][i % 4],
    enrollmentStatus: ["Active", "On Leave", "Active", "Active", "Graduated"][i % 5],
    gpa: Number((2.6 + (i % 8) * 0.2).toFixed(2)),
    attendance: 80 + (i % 15),
}));
export default function DeanStudents() {
    const [query, setQuery] = useState("");
    const [status, setStatus] = useState("All");
    const [dept, setDept] = useState("All");
    const [selected, setSelected] = useState(undefined);
    const filtered = useMemo(() => {
        return studentsMock.filter((s) => {
            const matchesQuery = `${s.name} ${s.id}`.toLowerCase().includes(query.toLowerCase());
            const matchesStatus = status === "All" || s.enrollmentStatus === status;
            const matchesDept = dept === "All" || s.dept === dept;
            return matchesQuery && matchesStatus && matchesDept;
        });
    }, [query, status, dept]);
    return (_jsx("div", { className: "min-h-screen bg-white dark:bg-gray-900", children: _jsxs("div", { className: "p-6 space-y-6 max-w-7xl mx-auto", children: [_jsx("h1", { className: "text-3xl font-bold text-blue-600 dark:text-blue-400", children: "Student Overview" }), _jsx(Card, { className: "bg-white dark:bg-gray-800 shadow-lg", children: _jsxs(CardContent, { className: "p-4 grid grid-cols-1 lg:grid-cols-4 gap-3", children: [_jsx("input", { placeholder: "Search by name or ID", value: query, onChange: (e) => setQuery(e.target.value), className: "rounded-md border border-gray-300 dark:border-gray-700 bg-white dark:bg-gray-900 px-3 py-2 text-sm" }), _jsxs("select", { value: status, onChange: (e) => setStatus(e.target.value), className: "rounded-md border border-gray-300 dark:border-gray-700 bg-white dark:bg-gray-900 px-3 py-2 text-sm", children: [_jsx("option", { children: "All" }), _jsx("option", { children: "Active" }), _jsx("option", { children: "On Leave" }), _jsx("option", { children: "Graduated" })] }), _jsxs("select", { value: dept, onChange: (e) => setDept(e.target.value), className: "rounded-md border border-gray-300 dark:border-gray-700 bg-white dark:bg-gray-900 px-3 py-2 text-sm", children: [_jsx("option", { children: "All" }), _jsx("option", { children: "Medicine" }), _jsx("option", { children: "Pharmacy" }), _jsx("option", { children: "Radiology" }), _jsx("option", { children: "Nursing" }), _jsx("option", { children: "Dentistry" })] }), _jsxs("div", { className: "flex gap-2", children: [_jsx(Button, { variant: "outline", className: "border-blue-600 text-blue-600 dark:border-blue-400 dark:text-blue-400", children: "Reset" }), _jsx(Button, { className: "bg-blue-600 text-white hover:bg-blue-700", children: "Search" })] })] }) }), _jsx(Card, { className: "bg-white dark:bg-gray-800 rounded-2xl shadow-lg", children: _jsx(CardContent, { className: "p-4 overflow-x-auto", children: _jsxs("table", { className: "w-full text-left", children: [_jsx("thead", { children: _jsxs("tr", { className: "text-gray-600 dark:text-gray-400", children: [_jsx("th", { className: "p-2", children: "ID" }), _jsx("th", { className: "p-2", children: "Name" }), _jsx("th", { className: "p-2", children: "Department" }), _jsx("th", { className: "p-2", children: "Semester" }), _jsx("th", { className: "p-2", children: "Status" }), _jsx("th", { className: "p-2", children: "GPA" }), _jsx("th", { className: "p-2", children: "Attendance" }), _jsx("th", { className: "p-2", children: "Actions" })] }) }), _jsx("tbody", { children: filtered.map((s) => (_jsxs("tr", { className: "border-t border-gray-200 dark:border-gray-700 hover:bg-blue-50 dark:hover:bg-gray-700", children: [_jsx("td", { className: "p-2", children: s.id }), _jsx("td", { className: "p-2", children: s.name }), _jsx("td", { className: "p-2", children: s.dept }), _jsx("td", { className: "p-2", children: s.semester }), _jsx("td", { className: "p-2", children: s.enrollmentStatus }), _jsx("td", { className: "p-2", children: s.gpa.toFixed(2) }), _jsxs("td", { className: "p-2", children: [s.attendance, "%"] }), _jsxs("td", { className: "p-2 flex gap-2", children: [_jsx(Button, { size: "sm", variant: "outline", className: "border-blue-600 text-blue-600 dark:border-blue-400 dark:text-blue-400", onClick: () => setSelected(s), children: "View Profile" }), _jsx(Button, { size: "sm", variant: "outline", className: "border-yellow-600 text-yellow-600 dark:border-yellow-500 dark:text-yellow-500", children: "Flag" })] })] }, s.id))) })] }) }) }), _jsx(Sheet, { open: !!selected, onOpenChange: (o) => !o && setSelected(undefined), children: _jsx(SheetContent, { side: "right", className: "w-[85vw] sm:max-w-3xl lg:max-w-4xl pl-8 pr-6 data-[state=open]:duration-150 data-[state=closed]:duration-150", children: selected && (_jsxs("div", { className: "space-y-4", children: [_jsx(SheetHeader, { children: _jsxs(SheetTitle, { className: "text-blue-600 dark:text-blue-400", children: [selected.name, " \u2022 ", selected.id] }) }), _jsxs("div", { className: "grid grid-cols-1 md:grid-cols-3 gap-4", children: [_jsxs("div", { children: [_jsx("p", { className: "text-sm text-gray-600 dark:text-gray-400", children: "Department" }), _jsx("p", { className: "font-medium", children: selected.dept })] }), _jsxs("div", { children: [_jsx("p", { className: "text-sm text-gray-600 dark:text-gray-400", children: "Semester" }), _jsx("p", { className: "font-medium", children: selected.semester })] }), _jsxs("div", { children: [_jsx("p", { className: "text-sm text-gray-600 dark:text-gray-400", children: "Status" }), _jsx("p", { className: "font-medium", children: selected.enrollmentStatus })] })] }), _jsxs("div", { className: "grid grid-cols-1 md:grid-cols-2 gap-6", children: [_jsxs("div", { className: "space-y-2", children: [_jsx("h4", { className: "text-lg font-semibold", children: "Academic History" }), _jsx("ul", { className: "list-disc ml-5 space-y-1 text-sm", children: Array.from({ length: 4 }).map((_, i) => (_jsxs("li", { children: ["Course ", (i + 1), " \u2022 Grade ", ["A", "B", "C", "B"][i]] }, i))) })] }), _jsxs("div", { className: "space-y-2", children: [_jsx("h4", { className: "text-lg font-semibold", children: "Current Semester Courses" }), _jsx("ul", { className: "list-disc ml-5 space-y-1 text-sm", children: Array.from({ length: 5 }).map((_, i) => (_jsxs("li", { children: ["Current Course ", (i + 1), " \u2022 Instructor ", (i + 1)] }, i))) })] })] }), _jsxs("div", { className: "grid grid-cols-1 md:grid-cols-3 gap-4", children: [_jsx(Card, { className: "bg-white dark:bg-gray-800", children: _jsxs(CardContent, { className: "p-4", children: [_jsx("p", { className: "text-sm text-gray-600 dark:text-gray-400", children: "GPA" }), _jsx("p", { className: "text-2xl font-bold text-blue-600 dark:text-blue-400", children: selected.gpa.toFixed(2) })] }) }), _jsx(Card, { className: "bg-white dark:bg-gray-800", children: _jsxs(CardContent, { className: "p-4", children: [_jsx("p", { className: "text-sm text-gray-600 dark:text-gray-400", children: "Attendance" }), _jsxs("p", { className: "text-2xl font-bold text-blue-600 dark:text-blue-400", children: [selected.attendance, "%"] })] }) }), _jsx(Card, { className: "bg-white dark:bg-gray-800", children: _jsxs(CardContent, { className: "p-4", children: [_jsx("p", { className: "text-sm text-gray-600 dark:text-gray-400", children: "Flags" }), _jsx("p", { className: "text-2xl font-bold text-blue-600 dark:text-blue-400", children: "0" })] }) })] })] })) }) }), _jsxs("div", { className: "grid grid-cols-1 sm:grid-cols-4 gap-4", children: [_jsx(Card, { className: "bg-white dark:bg-gray-800 shadow-lg", children: _jsxs(CardContent, { className: "p-4", children: [_jsx("p", { className: "text-sm text-gray-600 dark:text-gray-400", children: "Total Students" }), _jsx("p", { className: "text-3xl font-bold text-blue-600 dark:text-blue-400", children: studentsMock.length })] }) }), _jsx(Card, { className: "bg-white dark:bg-gray-800 shadow-lg", children: _jsxs(CardContent, { className: "p-4", children: [_jsx("p", { className: "text-sm text-gray-600 dark:text-gray-400", children: "Avg GPA (Filtered)" }), _jsx("p", { className: "text-3xl font-bold text-blue-600 dark:text-blue-400", children: (filtered.reduce((a, c) => a + c.gpa, 0) / Math.max(1, filtered.length)).toFixed(2) })] }) }), _jsx(Card, { className: "bg-white dark:bg-gray-800 shadow-lg", children: _jsxs(CardContent, { className: "p-4", children: [_jsx("p", { className: "text-sm text-gray-600 dark:text-gray-400", children: "Attendance Avg" }), _jsxs("p", { className: "text-3xl font-bold text-blue-600 dark:text-blue-400", children: [Math.round(filtered.reduce((a, c) => a + c.attendance, 0) / Math.max(1, filtered.length)), "%"] })] }) }), _jsx(Card, { className: "bg-white dark:bg-gray-800 shadow-lg", children: _jsxs(CardContent, { className: "p-4", children: [_jsx("p", { className: "text-sm text-gray-600 dark:text-gray-400", children: "New Enrollments (30d)" }), _jsx("p", { className: "text-3xl font-bold text-blue-600 dark:text-blue-400", children: Math.floor(studentsMock.length * 0.12) })] }) })] })] }) }));
}
