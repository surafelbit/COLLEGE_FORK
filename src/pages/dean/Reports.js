"use client";
import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { useMemo, useState } from "react";
import { Card, CardContent } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
export default function DeanReports() {
    const [reportType, setReportType] = useState("Student Performance");
    const [dept, setDept] = useState("All");
    const [from, setFrom] = useState("");
    const [to, setTo] = useState("");
    const summary = useMemo(() => {
        return {
            totalRecords: 124,
            averageGpa: 3.18,
            attendanceAvg: 89,
        };
    }, [reportType, dept, from, to]);
    return (_jsx("div", { className: "min-h-screen bg-white dark:bg-gray-900", children: _jsxs("div", { className: "p-6 space-y-6 max-w-6xl mx-auto", children: [_jsx("h1", { className: "text-3xl font-bold text-blue-600 dark:text-blue-400", children: "Academic Reports" }), _jsx(Card, { className: "bg-white dark:bg-gray-800 shadow-lg", children: _jsxs(CardContent, { className: "p-4 grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-4", children: [_jsxs("div", { className: "space-y-1", children: [_jsx("label", { className: "text-sm text-gray-600 dark:text-gray-400", children: "Report Type" }), _jsxs("select", { className: "w-full rounded-md border border-gray-300 dark:border-gray-700 bg-white dark:bg-gray-900 px-3 py-2 text-sm", value: reportType, onChange: (e) => setReportType(e.target.value), children: [_jsx("option", { children: "Student Performance" }), _jsx("option", { children: "Class Performance" }), _jsx("option", { children: "Department Performance" }), _jsx("option", { children: "Attendance" })] })] }), _jsxs("div", { className: "space-y-1", children: [_jsx("label", { className: "text-sm text-gray-600 dark:text-gray-400", children: "Department" }), _jsxs("select", { className: "w-full rounded-md border border-gray-300 dark:border-gray-700 bg-white dark:bg-gray-900 px-3 py-2 text-sm", value: dept, onChange: (e) => setDept(e.target.value), children: [_jsx("option", { children: "All" }), _jsx("option", { children: "Medicine" }), _jsx("option", { children: "Pharmacy" }), _jsx("option", { children: "Radiology" }), _jsx("option", { children: "Nursing" }), _jsx("option", { children: "Dentistry" })] })] }), _jsxs("div", { className: "space-y-1", children: [_jsx("label", { className: "text-sm text-gray-600 dark:text-gray-400", children: "From" }), _jsx("input", { type: "date", value: from, onChange: (e) => setFrom(e.target.value), className: "w-full rounded-md border border-gray-300 dark:border-gray-700 bg-white dark:bg-gray-900 px-3 py-2 text-sm" })] }), _jsxs("div", { className: "space-y-1", children: [_jsx("label", { className: "text-sm text-gray-600 dark:text-gray-400", children: "To" }), _jsx("input", { type: "date", value: to, onChange: (e) => setTo(e.target.value), className: "w-full rounded-md border border-gray-300 dark:border-gray-700 bg-white dark:bg-gray-900 px-3 py-2 text-sm" })] })] }) }), _jsxs("div", { className: "grid grid-cols-1 sm:grid-cols-3 gap-4", children: [_jsx(Card, { className: "bg-white dark:bg-gray-800 shadow-lg", children: _jsxs(CardContent, { className: "p-4", children: [_jsx("p", { className: "text-sm text-gray-600 dark:text-gray-400", children: "Total Records" }), _jsx("p", { className: "text-3xl font-bold text-blue-600 dark:text-blue-400", children: summary.totalRecords })] }) }), _jsx(Card, { className: "bg-white dark:bg-gray-800 shadow-lg", children: _jsxs(CardContent, { className: "p-4", children: [_jsx("p", { className: "text-sm text-gray-600 dark:text-gray-400", children: "Average GPA" }), _jsx("p", { className: "text-3xl font-bold text-blue-600 dark:text-blue-400", children: summary.averageGpa.toFixed(2) })] }) }), _jsx(Card, { className: "bg-white dark:bg-gray-800 shadow-lg", children: _jsxs(CardContent, { className: "p-4", children: [_jsx("p", { className: "text-sm text-gray-600 dark:text-gray-400", children: "Attendance Avg" }), _jsxs("p", { className: "text-3xl font-bold text-blue-600 dark:text-blue-400", children: [summary.attendanceAvg, "%"] })] }) })] }), _jsx(Card, { className: "bg-white dark:bg-gray-800 shadow-lg", children: _jsxs(CardContent, { className: "p-4 flex flex-wrap gap-3", children: [_jsx(Button, { className: "bg-blue-600 text-white hover:bg-blue-700", children: "Generate Report" }), _jsx(Button, { variant: "outline", className: "border-blue-600 text-blue-600 dark:border-blue-400 dark:text-blue-400", children: "Download PDF" }), _jsx(Button, { variant: "outline", className: "border-blue-600 text-blue-600 dark:border-blue-400 dark:text-blue-400", children: "Download Excel" }), _jsx(Button, { variant: "outline", className: "border-blue-600 text-blue-600 dark:border-blue-400 dark:text-blue-400", children: "Compare Across Years" })] }) }), _jsx(Card, { className: "bg-white dark:bg-gray-800 rounded-2xl shadow-lg", children: _jsx(CardContent, { className: "p-4 overflow-x-auto", children: _jsxs("table", { className: "w-full text-left", children: [_jsx("thead", { children: _jsxs("tr", { className: "text-gray-600 dark:text-gray-400", children: [_jsx("th", { className: "p-2", children: "Name" }), _jsx("th", { className: "p-2", children: "Department" }), _jsx("th", { className: "p-2", children: "Semester" }), _jsx("th", { className: "p-2", children: "GPA" }), _jsx("th", { className: "p-2", children: "Attendance" })] }) }), _jsx("tbody", { children: Array.from({ length: 10 }).map((_, i) => (_jsxs("tr", { className: "border-t border-gray-200 dark:border-gray-700 hover:bg-blue-50 dark:hover:bg-gray-700", children: [_jsxs("td", { className: "p-2", children: ["Student ", i + 1] }), _jsx("td", { className: "p-2", children: ["Medicine", "Pharmacy", "Radiology", "Nursing", "Dentistry"][i % 5] }), _jsx("td", { className: "p-2", children: ["Sem 1", "Sem 2", "Sem 3", "Sem 4"][i % 4] }), _jsx("td", { className: "p-2", children: (2.8 + (i % 5) * 0.2).toFixed(2) }), _jsxs("td", { className: "p-2", children: [85 + (i % 7), "%"] })] }, i))) })] }) }) })] }) }));
}
